ğŸ§¾ TYPES DEFINITIONS IN PYTHON
Python allows adding type hints using:
: for variable type hinting
-> for function return type hinting




ğŸ§© TYPES DEFINITIONS IN PYTHON

ğŸ”¹ What are Type Hints?
Type hints tell Python (and developers) what type of data you're working with.
Think of it like putting a label on your variables and functions. 
Python doesn't enforce these hints, but they help you write clean and error-free code.


âœ… Example 1: Variable Type Hint
    age: int = 25
This means:
age is expected to be an integer (int).
Python will not stop you if you assign a string to age, but tools like VS Code or PyCharm may warn you.


âœ… Example 2: Function Type Hint
    def greeting(name: str) -> str:
        return f"Hello, {name}!"
    print(greeting("Alice"))  # Output: Hello, Alice!

Explanation:
name: str  â†’ the input to this function should be a string.
-> str     â†’ the output (return value) will be a string.
This makes it easier to understand the function without reading the full code â€” 
"takes a name as string, returns a greeting as string."




ğŸ’¡ ADVANCED TYPE HINTS
Python also supports more complex types using the typing module.

âœ… Import First:
from typing import List, Tuple, Dict, Union


ğŸ”¹ List Type
numbers: List[int] = [1, 2, 3, 4, 5]
This means:
numbers is a list of integers.
If you put a string inside the list by mistake, you'll get a warning from a type checker.


ğŸ”¹ Tuple Type
person: Tuple[str, int] = ("Alice", 30)
This means:
person is a tuple with two values:
First should be a str
Second should be an int


ğŸ”¹ Dictionary Type
scores: Dict[str, int] = {"Alice": 90, "Bob": 85}
This means:
scores is a dictionary
Keys are strings
Values are integers


ğŸ”¹ Union Type
identifier: Union[int, str] = "ID123"
identifier = 12345  # Also valid
This means:
identifier can be either an integer or a string.
It accepts both types.




ğŸ“š Why use type hints?
âœ… Helps others (and your future self) read and understand your code
âœ… Useful for auto-complete in editors like VS Code
âœ… Helps find bugs early using tools like mypy or pylint
âœ… Makes your code self-documenting (clear without needing comments)





ğŸ§  Summary Table
______________________________________________________________________________________
|___________Syntax___________|________________________Meaning________________________|
|name: str	                 |     Variable name is a string                         |
|age: int	                 |     Variable age is an integer                        |
|def func(x: int) -> int:	 |     Function takes and returns integer                |
|List[int]	                 |     A list of integers                                |
|Tuple[str, int]	         |     A tuple of string and integer                     |
|Dict[str, int]	             |     A dictionary with string keys and integer values  |
|Union[int, str]	         |     Can be int OR str                                 |
|____________________________|_______________________________________________________|


